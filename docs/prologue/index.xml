<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>简介 on</title><link>https://n9e.github.io/docs/prologue/</link><description>Recent content in 简介 on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://n9e.github.io/docs/prologue/index.xml" rel="self" type="application/rss+xml"/><item><title>夜莺介绍</title><link>https://n9e.github.io/docs/prologue/introduction/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://n9e.github.io/docs/prologue/introduction/</guid><description>项目代码 # 后端：💡 https://github.com/ccfos/nightingale 前端：💡 https://github.com/n9e/fe-v5 欢迎大家在Github上关注夜莺项目，及时获取项目更新动态，有任何问题，也欢迎提交 Issue，以及提交 PR，开源社区，需要大家一起参与才能有蓬勃的生命力。
产品介绍 # 💡下载夜莺功能介绍材料（可用于你在团队内部分享/推广夜莺监控），点击以下链接下载：
PDF版本 Nightingale 可以接收各种采集器上报的监控数据，转存到时序库（可以支持Prometheus、M3DB、VictoriaMetrics、Thanos等），并提供告警规则、屏蔽规则、订阅规则的配置能力，提供监控数据的查看能力，提供告警自愈机制（告警触发之后自动回调某个webhook地址或者执行某个脚本），提供历史告警事件的存储管理、分组查看的能力。
系统截图 # 系统架构 # 夜莺 v5 的设计非常简单，核心是 server 和 webapi 两个模块，webapi 无状态，放到中心端，承接前端请求，将用户配置写入数据库；server 是告警引擎和数据转发模块，一般随着时序库走，一个时序库就对应一套 server，每套 server 可以只用一个实例，也可以多个实例组成集群，server 可以接收 Categraf、Telegraf、Grafana-Agent、Datadog-Agent、Falcon-Plugins 上报的数据，写入后端时序库，周期性从数据库同步告警规则，然后查询时序库做告警判断。每套 server 依赖一个 redis。
产品对比 # Zabbix # Zabbix 是一款老牌的监控系统，对机器和网络设备的监控覆盖很全，比如支持 AIX 系统，常见的开源监控都是支持 Linux、Windows，AIX 较少能够支持，Zabbix 用户群体广泛，国内很多公司基于 Zabbix 做商业化服务，不过 Zabbix 使用数据库做存储，容量有限，今年推出的 TimescaleDB 对容量有较大提升，大家可以尝试下；其次 Zabbix 整个产品设计是面向静态资产的，在云原生场景下显得力不从心。
Open-Falcon # 因为开发 Open-Falcon 和 Nightingale 的是一拨人，所以很多社区伙伴会比较好奇，为何要新做一个监控开源软件。核心点是 Open-Falcon 和 Nightingale 的差异点实在是太大了，Nightingale 并非是 Open-Falcon 设计逻辑的一个延续，就看做两个不同的软件就好。</description></item><item><title>社区分享</title><link>https://n9e.github.io/docs/prologue/share/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>https://n9e.github.io/docs/prologue/share/</guid><description>本节罗列社区用户的分享文章，欢迎大家把自己的心得文章链接放到这里，让整个社区受益，相互交流：
龙渊秦五专栏 # 连载：《说透运维监控系统》 # 1.1 监控系统概述 1.2 业界方案概述 2.1 安装夜莺监控系统 2.2 监控系统典型架构以及夜莺分布式部署方案 3.1 夜莺页面功能介绍 4.1 监控数据采集必知必会 4.2 讲解Categraf采集器 4.3 手把手教你编写Categraf采集插件 连载：《说透Kubernetes云原生监控》 # 1. Kubernetes云原生监控系列-概览 2. Kubernetes云原生监控系列-环境鉴权与自动发现 3. Kubernetes控制面组件指标梳理 夜莺动态 # 让工程师用上有设计感的监控工具，夜莺5.10来了 - 夜莺开发团队 为夜莺监控，一键开启智能告警能力 - 秦叶宁@快猫星云 Categraf - 夜莺监控发布新轮子 - 秦晓辉@快猫星云 夜莺监控成为CCF托管开源项目 - laiwei@快猫星云 云原生监控的十大趋势和特点 - laiwei@快猫星云 十年死磕，从一线工程师到CEO - laiwei@快猫星云 案例研究 # 映客直播使用夜莺监控，支撑5亿时间线节省8成费用 - 映客@郑富强 夜莺监控助力盛见网络，保障联盟链稳定运行 - 池梦南@盛见网络 夜莺监控助力方正证券解决运维稳定性难题，5年铁粉用户给出满分评价 - 杨豆豆@方正证券 监控告警平台的国产化选择—Rancher 与夜莺的集成实践 - 张智博@Rancher 高科技Startup构建监控体系之路 - 若尘@贝联珠贯 主流监控工具如何选？头部在线教育公司的监控选型落地全流程分享v - 于长夫 部署 # 使用ansible部署Categraf 使用ansible部署telegraf、categraf 告警通知 # 手把手教你接入钉钉告警 修改notify.</description></item><item><title/><link>https://n9e.github.io/docs/prologue/consulting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://n9e.github.io/docs/prologue/consulting/</guid><description>系列 内容 监控体系建设方案 ✅ 监控都有哪些层次和类别✅ 我的企业需要怎样的监控方案✅ 设备、中间件、数据库、Kubernetes、应用、业务，如何构建全方位监控体系 监控系统部署维护方案 ✅ 服务端、采集端、时序库，如何选型如何部署✅ 监控系统如何做到自身的高可用✅ 监控系统如何自监控 监控最佳实践 ✅ 配置监控数据的最佳实践是什么 ✅ 如何用好AIOps✅ 如何利用监控做好故障处理✅ 监控数据体系建设的最佳实践 稳定性系统建设方案 ✅ 大型服务稳定性建设最佳实践✅ 企业稳定性保障机制落地分析✅ 服务稳定性建设相关咨询 关于以上企业内训服务，请联系: 18612185520（微信同号） 。 更多详情可以参考 https://mp.weixin.qq.com/s/q8jc-bY6E1hh3B1AxhxZdQ .
关于快猫 # 快猫星云，一家云原生智能运维科技公司，秉承着让监控分析变简单的初心和使命，致力于打造先进的云原生监控分析平台，结合人工智能技术，提升云原生时代数字化服务的稳定性保障能力。
快猫星云团队是开源项目夜莺监控的主要贡献者、项目管理委员会核心成员。夜莺监控是一款开源云原生监控分析系统，采用 All-In-One 的设计，集数据采集、可视化、监控告警、数据分析于一体，与云原生生态紧密集成，提供开箱即用的企业级监控分析和告警能力，已有众多企业选择将 Prometheus + AlertManager + Grafana 的组合方案升级为使用夜莺监控。
夜莺监控，由滴滴开发和开源，并于 2022 年 5 月 11 日，捐赠予中国计算机学会开源发展委员会（CCF ODC），为 CCF ODC 成立后接受捐赠的第一个开源项目。</description></item><item><title/><link>https://n9e.github.io/docs/prologue/opensource-vs-enterprise/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://n9e.github.io/docs/prologue/opensource-vs-enterprise/</guid><description> 功能 社区版 企业版 All-in-one的数据采集器 ✅ ✅ Prometheus多集群管理和告警 ✅ ✅ 指标查询和可视化 ✅ ✅ 仪表盘 ✅ ✅ 报警回调、报警自动化处理 ✅ ✅ 报警配置、管理、订阅 ✅ ✅ 智能报警 ✖ ✅ ElasticSearch 多数据源管理、告警、可视化 ✖ ✅ On-Call管理：报警聚合、降噪、升级、排班 ✖ ✅ 故障发现：北极星系统 ✖ ✅ 故障定位：灭火图、日志中心、事件墙系统 ✖ ✅ 数据集成：集成企业内部已有工具和数据（metrics、logging、tracing） ✖ ✅ 用户权限管理 基础版本 完善的企业级权限管理功能 技术支持获取途径 社区群、Github 专项支持群、视频会议、现场沟通 技术支持响应级别 社区群内响应、Github issue回应 支持最高响应级别 7*24 专家解决方案 ✖ 7 x 12 专家技术支持 产品实施维护 ✖ 快猫星云团队负责实施及产品的运维、升级、维护 企业内训服务 ✖ ✅ 监控体系建设方案✅ 监控系统部署维护方案✅ 监控体系最佳实践✅ 稳定性保障体系建设方案</description></item></channel></rss>