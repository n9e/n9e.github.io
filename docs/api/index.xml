<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API on</title><link>https://n9e.github.io/docs/api/</link><description>Recent content in API on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 03 Jun 2022 09:48:45 +0000</lastBuildDate><atom:link href="https://n9e.github.io/docs/api/index.xml" rel="self" type="application/rss+xml"/><item><title>数据读取</title><link>https://n9e.github.io/docs/api/read/</link><pubDate>Thu, 12 Nov 2020 13:26:54 +0100</pubDate><guid>https://n9e.github.io/docs/api/read/</guid><description>夜莺把接收到的监控数据都直接写入了后端时序数据库，所以，读取监控数据，无需经由夜莺的接口，直接读取后端的时序库的接口就可以了。即：如果使用了 Prometheus，就通过 Prometheus 的接口读取监控数据，如果用了 VictoriaMetrics，就通过 VictoriaMetrics 的接口读取监控数据。
比如 Prometheus，就是那些/api/v1/query /api/v1/query_range之类的接口。相关接口文档请参考：Prometheus官网</description></item><item><title>数据推送</title><link>https://n9e.github.io/docs/api/push/</link><pubDate>Thu, 12 Nov 2020 13:26:54 +0100</pubDate><guid>https://n9e.github.io/docs/api/push/</guid><description>在 采集器 章节可以看出，夜莺支持多种数据接收的接口（由 n9e-server 实现，推送数据就是推给 n9e-server 的 19000 端口），包括 OpenTSDB、Open-Falcon、RemoteWrite、Datadog 等协议。这节我们以 OpenTSDB 的数据接收接口举例。
OpenTSDB 的数据接收接口的 Url Path 是 /opentsdb/put ，POST 方法，监控数据做成 JSON 放到 HTTP Request Body 中，举例：
[ { &amp;quot;metric&amp;quot;: &amp;quot;cpu_usage_idle&amp;quot;, &amp;quot;timestamp&amp;quot;: 1637732157, &amp;quot;tags&amp;quot;: { &amp;quot;cpu&amp;quot;: &amp;quot;cpu-total&amp;quot;, &amp;quot;ident&amp;quot;: &amp;quot;c3-ceph01.bj&amp;quot; }, &amp;quot;value&amp;quot;: 30.5 }, { &amp;quot;metric&amp;quot;: &amp;quot;cpu_usage_util&amp;quot;, &amp;quot;timestamp&amp;quot;: 1637732157, &amp;quot;tags&amp;quot;: { &amp;quot;cpu&amp;quot;: &amp;quot;cpu-total&amp;quot;, &amp;quot;ident&amp;quot;: &amp;quot;c3-ceph01.bj&amp;quot; }, &amp;quot;value&amp;quot;: 69.5 } ] 显然，JSON 最外层是个数组，如果只上报一条监控数据，也可以不要外面的中括号，直接把对象结构上报：
{ &amp;quot;metric&amp;quot;: &amp;quot;cpu_usage_idle&amp;quot;, &amp;quot;timestamp&amp;quot;: 1637732157, &amp;quot;tags&amp;quot;: { &amp;quot;cpu&amp;quot;: &amp;quot;cpu-total&amp;quot;, &amp;quot;ident&amp;quot;: &amp;quot;c3-ceph01.</description></item><item><title>Webapi接口</title><link>https://n9e.github.io/docs/api/webapi/</link><pubDate>Thu, 12 Nov 2020 13:26:54 +0100</pubDate><guid>https://n9e.github.io/docs/api/webapi/</guid><description>简介 # n9e-webapi 模块提供了两类接口，一个是 /api/n9e 打头的，给前端调用，另一类是 /v1/n9e 打头的，给第三方系统调用。如果想以个人身份模仿WEB操作，也是调用 /api/n9e 相关接口。
以个人身份模仿WEB操作 # 这种方式，页面上 JavaScript 可以调用的所有接口，你都可以用程序调用，打开 chrome 的开发者工具，扒拉这些接口，还是非常容易的。当然，要先登录，登录调用 webapi 模块的 /api/n9e/auth/login 接口，系统使用 jwt 认证，如果登录成功，会返回 access_token 和 refresh_token，每次调用的时候都要把 access_token 放到 Header 里，access_token 差不多15分钟过期，之后可以重新调用登录接口换 token，也可以调用 /api/n9e/auth/refresh 接口用 refresh_token 换一个新的 access_token，当然，也会顺道返回一个新的 refresh_token，举例：
# 调用登录接口拿到access_token和refresh_token记录下来，后面调用其他接口的时候会用到 [root@10-255-0-34 ~]# curl -X POST 'http://localhost:18000/api/n9e/auth/login' -d '{&amp;quot;username&amp;quot;: &amp;quot;root&amp;quot;, &amp;quot;password&amp;quot;: &amp;quot;root.2020&amp;quot;}' {&amp;quot;dat&amp;quot;:{&amp;quot;access_token&amp;quot;:&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NfdXVpZCI6ImIxNTcyMjgwLWZlNzAtNDhjZi1hNDQ3LWVlMjVhZmYwMjRhZCIsImF1dGhvcml6ZWQiOnRydWUsImV4cCI6MTYzNzgyMzA1OSwidXNlcl9pZGVudGl0eSI6IjEtcm9vdCJ9.nJ56Pc7qS5Ik_UaVmlNWu_QlABaBc4pZ_WkU45u2wWk&amp;quot;,&amp;quot;refresh_token&amp;quot;:&amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzgzMzc4NTksInJlZnJlc2hfdXVpZCI6ImIxNTcyMjgwLWZlNzAtNDhjZi1hNDQ3LWVlMjVhZmYwMjRhZCsrMS1yb290IiwidXNlcl9pZGVudGl0eSI6IjEtcm9vdCJ9.JKsbfTYBCOOfR_oPsf496N9ml9yXbP7BHb4E8Yfnzbo&amp;quot;,&amp;quot;user&amp;quot;:{&amp;quot;id&amp;quot;:1,&amp;quot;username&amp;quot;:&amp;quot;root&amp;quot;,&amp;quot;nickname&amp;quot;:&amp;quot;超管&amp;quot;,&amp;quot;phone&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;portrait&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;roles&amp;quot;:[&amp;quot;Admin&amp;quot;],&amp;quot;contacts&amp;quot;:{},&amp;quot;create_at&amp;quot;:1637545881,&amp;quot;create_by&amp;quot;:&amp;quot;system&amp;quot;,&amp;quot;update_at&amp;quot;:1637546351,&amp;quot;update_by&amp;quot;:&amp;quot;root&amp;quot;,&amp;quot;admin&amp;quot;:true}},&amp;quot;err&amp;quot;:&amp;quot;&amp;quot;} # access_token放到Authorization这个Header里，Bearer的验证方式 [root@10-255-0-34 ~]# curl -H &amp;quot;Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NfdXVpZCI6ImIxNTcyMjgwLWZlNzAtNDhjZi1hNDQ3LWVlMjVhZmYwMjRhZCIsImF1dGhvcml6ZWQiOnRydWUsImV4cCI6MTYzNzgyMzA1OSwidXNlcl9pZGVudGl0eSI6IjEtcm9vdCJ9.nJ56Pc7qS5Ik_UaVmlNWu_QlABaBc4pZ_WkU45u2wWk&amp;quot; 'http://localhost:18000/api/n9e/self/profile' {&amp;quot;dat&amp;quot;:{&amp;quot;id&amp;quot;:1,&amp;quot;username&amp;quot;:&amp;quot;root&amp;quot;,&amp;quot;nickname&amp;quot;:&amp;quot;超管&amp;quot;,&amp;quot;phone&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;portrait&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;roles&amp;quot;:[&amp;quot;Admin&amp;quot;],&amp;quot;contacts&amp;quot;:{},&amp;quot;create_at&amp;quot;:1637545881,&amp;quot;create_by&amp;quot;:&amp;quot;system&amp;quot;,&amp;quot;update_at&amp;quot;:1637546351,&amp;quot;update_by&amp;quot;:&amp;quot;root&amp;quot;,&amp;quot;admin&amp;quot;:true},&amp;quot;err&amp;quot;:&amp;quot;&amp;quot;} # 如果token过期了，后端会返回异常HTTP状态码，此时要调用refresh接口换取新的token [root@10-255-0-34 ~]# curl -X POST 'http://localhost:18000/api/n9e/auth/refresh' -d '{&amp;quot;refresh_token&amp;quot;: &amp;quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.</description></item></channel></rss>