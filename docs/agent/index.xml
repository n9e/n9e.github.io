<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Collector on</title><link>https://n9e.github.io/docs/agent/</link><description>Recent content in Collector on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 06 May 2022 08:49:15 +0000</lastBuildDate><atom:link href="https://n9e.github.io/docs/agent/index.xml" rel="self" type="application/rss+xml"/><item><title>Categraf</title><link>https://n9e.github.io/docs/agent/categraf/</link><pubDate>Thu, 12 May 2022 13:26:54 +0100</pubDate><guid>https://n9e.github.io/docs/agent/categraf/</guid><description>Categraf is an agent which can collect metrics and logs. Categraf uses prometheus remote write as data push protocol, so it can push metrics to Nightingale.
Configuration # Configuration file of categraf: conf/config.toml
[writer_opt] # default: 2000 batch = 2000 # channel(as queue) size chan_size = 10000 [[writers]] url = &amp;quot;http://N9E:17000/prometheus/v1/write&amp;quot; # Basic auth username basic_auth_user = &amp;quot;&amp;quot; # Basic auth password basic_auth_pass = &amp;quot;&amp;quot; # timeout settings, unit: ms timeout = 5000 dial_timeout = 2500 max_idle_conns_per_host = 100 [heartbeat] enable = true # report os version cpu.</description></item><item><title>Telegraf</title><link>https://n9e.github.io/docs/agent/telegraf/</link><pubDate>Thu, 12 May 2022 13:26:54 +0100</pubDate><guid>https://n9e.github.io/docs/agent/telegraf/</guid><description>Introduction # Telegraf is an agent for collecting, processing, aggregating, and writing metrics. Based on a plugin system to enable developers in the community to easily add support for additional metric collection.
Telegraf supports multiple output plugins and we use opentsdb plugin to send metrics to Nightingale.
Install # #!/bin/sh version=1.20.4 tarball=telegraf-${version}_linux_amd64.tar.gz wget https://dl.influxdata.com/telegraf/releases/$tarball tar xzvf $tarball mkdir -p /opt/telegraf cp -far telegraf-${version}/usr/bin/telegraf /opt/telegraf cat &amp;lt;&amp;lt;EOF &amp;gt; /opt/telegraf/telegraf.conf [global_tags] [agent] interval = &amp;quot;10s&amp;quot; round_interval = true metric_batch_size = 1000 metric_buffer_limit = 10000 collection_jitter = &amp;quot;0s&amp;quot; flush_interval = &amp;quot;10s&amp;quot; flush_jitter = &amp;quot;0s&amp;quot; precision = &amp;quot;&amp;quot; hostname = &amp;quot;&amp;quot; omit_hostname = false [[outputs.</description></item><item><title>Datadog-Agent</title><link>https://n9e.github.io/docs/agent/datadog-agent/</link><pubDate>Thu, 12 May 2022 13:26:54 +0100</pubDate><guid>https://n9e.github.io/docs/agent/datadog-agent/</guid><description>Configuration # Mofidy the configuration item dd_url in the file /etc/datadog-agent/datadog.yaml.
dd_url: http://nightingale-address/datadog nightingale-address is your Nightingale address.
Restart # Restart the Datadog-Agent.
systemctl restart datadog-agent</description></item><item><title>Grafana-Agent</title><link>https://n9e.github.io/docs/agent/grafana-agent/</link><pubDate>Thu, 12 May 2022 13:26:54 +0100</pubDate><guid>https://n9e.github.io/docs/agent/grafana-agent/</guid><description>Introduction # Grafana Agent is a vendor-neutral, batteries-included telemetry collector with configuration inspired by Terraform. It is designed to be flexible, performant, and compatible with multiple ecosystems such as Prometheus and OpenTelemetry.
Grafana Agent is based around components. Components are wired together to form programmable observability pipelines for telemetry collection, processing, and delivery.
Configuration # server: log_level: info http_listen_port: 12345 metrics: global: scrape_interval: 15s scrape_timeout: 10s remote_write: - url: https://N9E:17000/prometheus/v1/write basic_auth: username: &amp;quot;&amp;quot; password: &amp;quot;&amp;quot; integrations: agent: enabled: true node_exporter: enabled: true include_exporter_metrics: true Restart # nohup .</description></item></channel></rss>