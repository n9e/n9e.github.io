<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>采集器 on</title><link>https://n9e.github.io/zh/docs/agent/</link><description>Recent content in 采集器 on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 06 May 2022 08:49:15 +0000</lastBuildDate><atom:link href="https://n9e.github.io/zh/docs/agent/index.xml" rel="self" type="application/rss+xml"/><item><title>前置说明</title><link>https://n9e.github.io/zh/docs/agent/intro/</link><pubDate>Sun, 26 Jan 2025 10:55:54 +0800</pubDate><guid>https://n9e.github.io/zh/docs/agent/intro/</guid><description>夜莺作为一个告警引擎，不需要和采集器整合，直接对接各类数据源做查询告警即可。
即：如果你们已经采集了各类监控数据并存储到时序库中了，那就把时序库作为数据源配置到夜莺中，夜莺就可以直接查询时序库中的数据了。不需要用到本章提到的各类采集器。
但是很多新用户并未构建自己的采集能力，因此我们提供了一些采集器的对接方案，方便用户快速上手。不过夜莺仍然不提供存储能力，这些采集器采集了数据推给夜莺，夜莺再把数据转存到时序库。
夜莺的配置文件 etc/config.toml 中有个 [[Pushgw.Writers]] 的部分，就是用来配置时序库的地址的。夜莺收到数据后会把数据转发到这些地址。</description></item><item><title>Categraf</title><link>https://n9e.github.io/zh/docs/agent/categraf/</link><pubDate>Sun, 26 Jan 2025 10:55:54 +0800</pubDate><guid>https://n9e.github.io/zh/docs/agent/categraf/</guid><description>Categraf 是一个可以采集指标和日志的代理。Categraf 使用 prometheus remote write 作为数据推送协议，因此可以将指标推送到夜莺。
配置 # Categraf 的配置文件: conf/config.toml
[writer_opt] # default: 2000 batch = 2000 # channel(as queue) size chan_size = 10000 [[writers]] url = &amp;quot;http://N9E:17000/prometheus/v1/write&amp;quot; # Basic auth username basic_auth_user = &amp;quot;&amp;quot; # Basic auth password basic_auth_pass = &amp;quot;&amp;quot; # timeout settings, unit: ms timeout = 5000 dial_timeout = 2500 max_idle_conns_per_host = 100 [heartbeat] enable = true # report os version cpu.util mem.util metadata url = &amp;quot;http://N9E:17000/v1/n9e/heartbeat&amp;quot; # interval, unit: s interval = 10 # Basic auth username basic_auth_user = &amp;quot;&amp;quot; # Basic auth password basic_auth_pass = &amp;quot;&amp;quot; ## Optional headers # headers = [&amp;quot;X-From&amp;quot;, &amp;quot;categraf&amp;quot;, &amp;quot;X-Xyz&amp;quot;, &amp;quot;abc&amp;quot;] # timeout settings, unit: ms timeout = 5000 dial_timeout = 2500 max_idle_conns_per_host = 100 我们建议您使用 Categraf 采集机器的 CPU、内存等常规指标，因为 Categraf 和夜莺的对接最为丝滑。Categraf 会自动采集机器的元信息并且和夜莺对接提供告警自愈能力。</description></item><item><title>Telegraf</title><link>https://n9e.github.io/zh/docs/agent/telegraf/</link><pubDate>Thu, 12 May 2022 13:26:54 +0100</pubDate><guid>https://n9e.github.io/zh/docs/agent/telegraf/</guid><description>简介 # Telegraf 是一个用于收集、处理、聚合和写入指标的 agent，来自 InfluxData 公司。
Telegraf 支持多种输出插件，我们可以使用 opentsdb 或 prometheusremotewrite 插件将指标发送到夜莺。下面是以 opentsdb 为例的配置。
安装 # #!/bin/sh version=1.20.4 tarball=telegraf-${version}_linux_amd64.tar.gz wget https://dl.influxdata.com/telegraf/releases/$tarball tar xzvf $tarball mkdir -p /opt/telegraf cp -far telegraf-${version}/usr/bin/telegraf /opt/telegraf cat &amp;lt;&amp;lt;EOF &amp;gt; /opt/telegraf/telegraf.conf [global_tags] [agent] interval = &amp;quot;10s&amp;quot; round_interval = true metric_batch_size = 1000 metric_buffer_limit = 10000 collection_jitter = &amp;quot;0s&amp;quot; flush_interval = &amp;quot;10s&amp;quot; flush_jitter = &amp;quot;0s&amp;quot; precision = &amp;quot;&amp;quot; hostname = &amp;quot;&amp;quot; omit_hostname = false [[outputs.opentsdb]] host = &amp;quot;http://127.</description></item><item><title>Datadog-Agent</title><link>https://n9e.github.io/zh/docs/agent/datadog-agent/</link><pubDate>Sun, 26 Jan 2025 10:55:54 +0800</pubDate><guid>https://n9e.github.io/zh/docs/agent/datadog-agent/</guid><description>配置 # Datadog-agent 的配置文件路径为 /etc/datadog-agent/datadog.yaml，修改配置文件中的 dd_url 项。
dd_url: http://nightingale-address/datadog nightingale-address 为你的夜莺地址。
重启 # 重启 Datadog-Agent。
systemctl restart datadog-agent</description></item></channel></rss>