<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>实践 on</title><link>https://n9e.github.io/zh/docs/practice/</link><description>Recent content in 实践 on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sun, 01 Jun 2025 19:41:08 +0800</lastBuildDate><atom:link href="https://n9e.github.io/zh/docs/practice/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux OS</title><link>https://n9e.github.io/zh/docs/practice/linux/</link><pubDate>Sun, 01 Jun 2025 19:42:42 +0800</pubDate><guid>https://n9e.github.io/zh/docs/practice/linux/</guid><description> 对于监控系统，基础功能的强弱确实非常关键，但是如何在不同的场景落地实践，则更为关键。在《实践》章节，搜罗各类监控实践经验，会以不同的组件分门别类，您如果对某个组件有好的实践经验，欢迎提 PR，把您的文章链接附到对应的组件目录下。
Linux 主机监控最佳实践 透过 Node-Exporter 彻底搞懂机器监控</description></item><item><title>进程监控</title><link>https://n9e.github.io/zh/docs/practice/proc/</link><pubDate>Tue, 03 Jun 2025 09:15:37 +0800</pubDate><guid>https://n9e.github.io/zh/docs/practice/proc/</guid><description>对于监控系统，基础功能的强弱确实非常关键，但是如何在不同的场景落地实践，则更为关键。在《实践》章节，搜罗各类监控实践经验，会以不同的组件分门别类，您如果对某个组件有好的实践经验，欢迎提 PR，把您的文章链接附到对应的组件目录下。
进程监控分两部分，一部分是操作系统内整体进程数量统计，另一部分是单一进程指标采集。
总体进程数量 # 以 Categraf 为例，Categraf 提供了 processes 插件用于统计机器上的进程数量，比如总进程数量多少、Running 状态的进程数量多少、Sleeping 状态的进程数量多少等。针对 processes 插件采集的数据，我们整理过专门的仪表盘：
https://github.com/ccfos/nightingale/blob/main/integrations/Linux/dashboards/categraf-processes.json
这类指标有什么用？通常是非预期的启动了大量进程的场景。比如笔者之前遇到：crontab 写挫了，脚本 hang 住了，而且没有在 cron 脚本里检测之前的进程是否退出，导致每次 crontab 执行时都启动了一个新的进程，最终导致机器上有大量的同名进程在运行，最终酿成事故。这个时候就可以通过 processes 插件采集的指标来发现问题。
单一进程指标 # 单一进程指标，指的是进程占用的 CPU、内存、句柄等指标。有多种方式可以采集。
在进程里埋点。比如 Java 程序可以使用 micrometer 或者 Spring Boot Actuator 等方式来采集指标，Go 程序可以使用 Prometheus 的 Go 语言客户端库来采集指标。 在进程外采集。比如使用 Process Exporter、Categraf 的 procstat 插件等采集进程指标。 通常来讲，在进程里埋点是更推荐的做法。不但可以采集进程的 CPU、内存 等常规指标，也可以采集更多运行时指标，比如 Java 程序可以采集 JVM 的一些指标，Go 程序可以采集一些 goroutine、gc 的指标。所有优秀的开源软件，都会暴露自身的监控指标。作为业务研发人员，水平参差不齐，可能有些人不清楚埋点的重要性，此时也可使用进程外采集的方式来做补充。
Spring Boot Actuator 是可以通过配置调整来直接暴露 Prometheus 格式的 metrics 数据的，所以不需要额外的插件来采集，直接使用 Categraf 的 prometheus 插件即可。或者直接在 Prometheus 或 vmagent 里配置抓取规则也可以。</description></item></channel></rss>