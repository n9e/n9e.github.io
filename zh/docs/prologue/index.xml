<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>前言 on</title><link>https://n9e.github.io/zh/docs/prologue/</link><description>Recent content in 前言 on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://n9e.github.io/zh/docs/prologue/index.xml" rel="self" type="application/rss+xml"/><item><title>夜莺项目介绍</title><link>https://n9e.github.io/zh/docs/prologue/introduction/</link><pubDate>Sat, 25 Jan 2025 08:48:57 +0800</pubDate><guid>https://n9e.github.io/zh/docs/prologue/introduction/</guid><description>夜莺监控（Nightingale）是一款侧重告警的监控类开源项目。类似 Grafana 的数据源集成方式，夜莺也是对接多种既有的数据源，不过 Grafana 侧重在可视化，夜莺是侧重在告警引擎、告警事件的处理和分发。
夜莺监控项目，最初由滴滴开发和开源，并于 2022 年 5 月 11 日，捐赠予中国计算机学会开源发展委员会（CCF ODC），为 CCF ODC 成立后接受捐赠的第一个开源项目。
夜莺的工作逻辑 # 很多用户已经自行采集了指标、日志数据，此时就把存储库（VictoriaMetrics、ElasticSearch等）作为数据源接入夜莺，即可在夜莺里配置告警规则、通知规则，完成告警事件的生成和派发。
夜莺项目本身不提供监控数据采集能力。推荐您使用 Categraf 作为采集器，可以和夜莺丝滑对接。
Categraf 可以采集操作系统、网络设备、各类中间件、数据库的监控数据，通过 Remote Write 协议推送给夜莺，夜莺把监控数据转存到时序库（如 Prometheus、VictoriaMetrics 等），并提供告警和可视化能力。
对于个别边缘机房，如果和中心夜莺服务端网络链路不好，希望提升告警可用性，夜莺也提供边缘机房告警引擎下沉部署模式，这个模式下，即便边缘和中心端网络割裂，告警功能也不受影响。
上图中，机房A和中心机房的网络链路很好，所以直接由中心端的夜莺进程做告警引擎，机房B和中心机房的网络链路不好，所以在机房B部署了 n9e-edge 做告警引擎，对机房B的数据源做告警判定。
告警降噪、升级、协同 # 夜莺的侧重点是做告警引擎，即负责产生告警事件，并根据规则做灵活派发，内置支持 20 种通知媒介（电话、短信、邮件、钉钉、飞书、企微、Slack 等）。
如果您有更高级的需求，比如：
想要把公司的多套监控系统产生的事件聚拢到一个平台，统一做收敛降噪、响应处理、数据分析 想要支持人员的排班，践行 On-call 文化，想要支持告警认领、升级（避免遗漏）、协同处理 那夜莺是不合适的，推荐您使用 FlashDuty 这样的 On-call 产品，把云上、云下各类监控系统的告警收拢到一起，统一做降噪、分发、响应。
相关资料 &amp;amp; 交流渠道 # 📚 夜莺介绍 PPT 对您了解夜莺各项关键特性会有帮助（PPT链接在文末） ❤️ 提问 &amp;amp; 报告 Bug 写清楚版本、问题描述、复现步骤、截图等信息，否则社区无法帮助您 🌟 加我微信：picobyte（备注：夜莺互助群）拉入微信群，如果已经把夜莺上到生产环境了，可联系我拉入资深监控用户群 关键特性简介 # 夜莺支持告警规则、屏蔽规则、订阅规则、通知规则，内置支持 20 种通知媒介，支持消息模板自定义 支持事件管道，对告警事件做 Pipeline 处理，方便和自有系统做自动化整合，比如给告警事件附加一些元信息，对事件做 relabel 支持业务组概念，引入权限体系，分门别类管理各类规则 很多数据库、中间件内置了告警规则，可以直接导入使用，也可以直接导入 Prometheus 的告警规则 支持告警自愈，即告警之后自动触发一个脚本执行一些预定义的逻辑，比如清理一下磁盘、抓一下现场等 夜莺存档了历史告警事件，支持多维度的查询和统计 支持灵活的聚合分组，一目了然看到公司的告警事件分布情况 夜莺内置常用操作系统、中间件、数据库的的指标说明、仪表盘、告警规则，不过都是社区贡献的，整体也是参差不齐 夜莺直接接收 Remote Write、OpenTSDB、Datadog、Falcon 等多种协议的数据，故而可以和各类 Agent 对接 夜莺支持 Prometheus、ElasticSearch、Loki、TDEngine 等多种数据源，可以对其中的数据做告警 夜莺可以很方便内嵌企业内部系统，比如 Grafana、CMDB 等，甚至可以配置这些内嵌系统的菜单可见性 夜莺支持仪表盘功能，支持常见的图表类型，也内置了一些仪表盘，上图是其中一个仪表盘的截图。 如果你已经习惯了 Grafana，建议仍然使用 Grafana 看图。Grafana 在看图方面道行更深。 机器相关的监控数据，如果是 Categraf 采集的，建议使用夜莺自带的仪表盘查看，因为 Categraf 的指标命名 Follow 的是 Telegraf 的命名方式，和 Node Exporter 不同 因为夜莺有个业务组的概念，机器可以归属不同的业务组，有时在仪表盘里只想查看当前所属业务组的机器，所以夜莺的仪表盘可以和业务组联动 感谢众多企业信赖 # 夜莺有众多企业用户，如下只是选取了一部分，以下企业排名不分先后。</description></item><item><title>夜莺对比 Prometheus</title><link>https://n9e.github.io/zh/docs/prologue/prometheus/</link><pubDate>Fri, 30 May 2025 21:37:49 +0800</pubDate><guid>https://n9e.github.io/zh/docs/prologue/prometheus/</guid><description>夜莺监控（Nightingale）类似 Grafana，可以对接多种数据源，最常用的数据源就是 Prometheus（其他兼容 Prometheus 接口的数据源，比如 VictoriaMetrics、Thanos、M3DB，都可以看做是 Prometheus 类型），所以二者关系密切。
如果您有如下诉求，可以考虑夜莺：
有多套时序库，比如 Prometheus、VictoriaMetrics 等，想要使用一套统一的平台来管理各类告警规则，并有权限管控 Prometheus 的告警引擎是单点的，担心单机挂掉导致告警引擎无法工作 除了 Prometheus 的告警，还需要 ElasticSearch、Loki、ClickHouse 等其他数据源的告警 需要更灵活的告警规则配置，比如控制生效时间、事件 Relabel、事件联动 CMDB、支持告警联动自愈脚本 夜莺监控也具备类似 Grafana 的可视化能力，不过没有 Grafana 道行深，以笔者观察来看，很多公司是一套组合方案（成年人的世界，没有非黑即白，都要）：
数据采集：组合使用了各种 agent 和 exporter，比如主要使用 Categraf（尤其是机器监控，和夜莺丝滑对接），辅以各类 Exporter 存储：时序库主要使用 VictoriaMetrics，因为 VictoriaMetrics 兼容 Prometheus，而且性能更好且有集群版本，对大部分公司，单机版就足够用了 告警引擎：使用夜莺，方便不同的团队管理协作，内置了一些规则开箱即用，告警规则的配置非常灵活，事件 Pipeline 机制方便和自己的 CMDB 等打通 看图可视化：使用 Grafana，图表更为炫酷，社区非常庞大，从 Grafana 站点可以找到很多别人做好的仪表盘，较为省心 告警事件 On-call 分发：使用 FlashDuty，支持对接 Zabbix、Prometheus、夜莺、各云监控、Elastalert 等各类监控系统，收拢告警事件到一个平台，统一收敛降噪、排班、认领升级、响应、派发等。</description></item><item><title>学习夜莺的前置知识</title><link>https://n9e.github.io/zh/docs/prologue/pre-knowledge/</link><pubDate>Fri, 30 May 2025 22:03:32 +0800</pubDate><guid>https://n9e.github.io/zh/docs/prologue/pre-knowledge/</guid><description>夜莺监控（Nightingale）算是 Prometheus 大生态的一部分，所以很多 Prometheus 的概念和知识就是使用夜莺的前置知识，本文把关键知识做一个罗列，并给出相关学习资料，希望对你有所帮助。
基础知识 # Linux 知识，比如进程相关、网络相关、systemd 相关的等，可参考书籍《鸟哥的Linux私房菜》、视频教程《面向研发工程师的Linux进阶知识》 提问的技巧，可以参考著名黑客 Raymond 的《提问的智慧》，在全球范围内传播甚广。Raymond 的文章很长，也可以参考这篇短文《学会这招，技术问题再也难不倒你》 监控知识 # 基础的一些监控概念，可以参考这个专栏《运维监控系统实战笔记》，尤其是前面几篇基础内容 Prometheus 的基础概念，可以参考 Prometheus 的官网文档，也可以参考这里的中文知识。 Promql，非常非常非常重要，这是使用 Prometheus 和 Nightingale 的前提，可以参考《Promql系列教程》</description></item><item><title>夜莺架构设计</title><link>https://n9e.github.io/zh/docs/prologue/architecture/</link><pubDate>Fri, 30 May 2025 22:31:56 +0800</pubDate><guid>https://n9e.github.io/zh/docs/prologue/architecture/</guid><description>夜莺的架构比较简单，如果只是测试功能，一个二进制就可以启动，如果要上到生产环境，则要依赖 MySQL 和 Redis。有些公司会有多个机房，有些边缘机房和中心机房的网络质量较差，夜莺也针对这种情况做了专门的设计。
架构图 # 不考虑边缘模式的话，夜莺只有一个主进程，即 n9e 进程，依赖 MySQL 和 Redis 存储一些管理数据，可以接入多种数据源，技术架构图示意如下：
初期支持的数据源：Prometheus、VictoriaMetrics、ElasticSearch，既支持看图也支持告警，后面夜莺侧重在做告警引擎，所以后面新支持的数据源就只支持告警。
根据监控数据是否流经夜莺，可以分成两个模式：
模式1：监控数据不流经夜莺，用户自己搞定数据采集的问题，仅把时序库配置到夜莺里，使用夜莺看图和配置告警。上面的架构图就是典型的这种模式。 模式2：数据流经夜莺，Categraf 通过 remote write 协议把数据推给夜莺，夜莺不直接存储数据，而是把数据转存到时序库，转存到哪些时序库？由夜莺配置文件 config.toml 中的 Pushgw.Writers 来决定，模式2下的架构图如下： 上图中，夜莺接到监控数据之后转发给了 VictoriaMetrics，当然，也可以转发给 Prometheus，如果要转发给 Prometheus，记得 Prometheus 启动的时候要打开 remote receiver 的功能（./prometheus --help | grep receiver 可以看到具体是要加哪个控制参数），即开启 Prometheus 的 /api/v1/write 接口。
🟢 如果是新用户，建议直接使用 VictoriaMetrics，VictoriaMetrics 性能更好，且支持集群模式，而且，和 Prometheus 接口兼容。不过 VictoriaMetrics 的中文资料比 Prometheus 更少一些。
单节点测试模式 # 从夜莺的 github releases 下载发布包，解压之后里边有个 n9e 二进制文件，直接 ./n9e 就可以运行起来，默认端口是 17000，默认用户名是 root，密码是 root.2020。</description></item><item><title>夜莺商业版</title><link>https://n9e.github.io/zh/docs/prologue/flashcat/</link><pubDate>Fri, 30 May 2025 22:31:56 +0800</pubDate><guid>https://n9e.github.io/zh/docs/prologue/flashcat/</guid><description>夜莺监控（Nightingale）的主力开发人员是全职在做开源，如果没有收入养家糊口，项目也就无法持续了。所以他们创办了一家企业：北京快猫星云科技有限公司，简称“快猫”，推出了两款商业产品：
一站式智能观测平台Flashcat 一站式告警响应平台Flashduty 其中 Flashcat 可以看做是夜莺的商业版，定位是统一的观测平台，开源版则只是侧重在指标监控，二者的区别可以参考这篇文章：《夜莺开源版和商业版的区别》。
FlashDuty 则是类似 PagerDuty 的一站式告警响应平台（即 On-call 中心），支持对接 Zabbix、Prometheus、夜莺、各云监控、Elastalert 等各类监控系统，收拢告警事件到一个平台，统一对告警做收敛降噪、排班、认领升级、响应、派发等。可以免费注册试用。
监控、可观测性领域的知识确实非常驳杂，如果您有预算需要乙方协助，可以考虑快猫的产品，多方共赢 👉 免费与快猫做产品思路交流。</description></item></channel></rss>